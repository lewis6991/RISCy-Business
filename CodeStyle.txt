//----------------------------------------
// File: coding_style.txt
// Description: Document detailing the coding style to be used.
// Primary Author: Lewis
// Other Contributors: Dominic, ...
//----------------------------------------

Coding style:
Note: This coding style should only be seen as a convention not strict rules.
-------------------------------------------
Each document should have a header at the explaining the purpose of the file and metadata. See above.
-------------------------------------------
- No tabs.
-------------------------------------------
- Indent with 4 spaces.
-------------------------------------------
- Page width of 80 characters.
    -Wrap lines with indents.
-------------------------------------------
- 'begin' on next line as if, e.g:
    if (condition)
    begin
      ...
    end
-------------------------------------------
- No redundant 'begin-end's', e.g.
    if (conidition) begin //
        assignment;       // Not this.
    end                   //
    
    if (condition)        // This is preferred.
        assignment;       // 
-------------------------------------------
- Prefer assignment of 'if' statements on seperate lines, e.g.
    if (condition)  assignment; // Not this
    
    if (condition)  // This is preferred.
        assignment; // 
-------------------------------------------
- Have one space between 'if' and the first bracket, e.g. 'if (condition)'.
-------------------------------------------
- Spaces used appropriately with operators, e.g:
    a=b*c+d          // Not this
    a = b*c + d      // Preferred
    input [3 : 0] a; // Not this 
    input [3:0] a;   // Preferred
-------------------------------------------
- All code aligned when possible, e.g:
    input        Clock ; 
    output       nReset;
    input  [3:0] Out   ;
--------------------------------------------
-Port names are camelcased with the exception of active-low ports, e.g.
    input Clock      ;
    input nReset     ;
    input ThisIsAPort;
--------------------------------------------
-Internal signals can be named however with the rule that they start lowercase.
--------------------------------------------
-For 1 bit signals, a NOT of the signal shall be implemented using tilda, not explanation mark.
  e.g. if(~nReset)  // Preferred
       if(!nReset)  // Not this
--------------------------------------------
- Only declare input or output keyword once where possible.
  e.g.  input        [31:0] ProgAddrIn,
        input               Clock, 
                            nReset,
        output logic [31:0] ProgAddrOut,
        output logic        A,
                            B,
                            C
--------------------------------------------
    
